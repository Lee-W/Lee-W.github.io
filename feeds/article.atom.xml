<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Life Lies in Traveling - Article</title><link href="http://lee-w.github.io/" rel="alternate"></link><link href="http://lee-w.github.io/feeds/article.atom.xml" rel="self"></link><id>http://lee-w.github.io/</id><updated>2017-02-28T21:56:00+08:00</updated><entry><title>git ignore-io 與 開源貢獻經驗</title><link href="http://lee-w.github.io/posts/article/2017/02/git-ignoreio-and-open-source-experience" rel="alternate"></link><published>2017-02-28T21:56:00+08:00</published><updated>2017-02-28T21:56:00+08:00</updated><author><name>Lee-W</name></author><id>tag:lee-w.github.io,2017-02-28:/posts/article/2017/02/git-ignoreio-and-open-source-experience</id><summary type="html">&lt;p&gt;雖然已經隔了一年多&lt;br&gt;
當初git ignore-io這個小功能，也是花了一兩個月&lt;br&gt;
好不容易才&lt;a href="https://github.com/tj/git-extras"&gt;git extras&lt;/a&gt;&amp;nbsp;merge回去的&lt;/p&gt;
</summary><content type="html">&lt;p&gt;雖然已經隔了一年多&lt;br&gt;
當初git ignore-io這個小功能，也是花了一兩個月&lt;br&gt;
好不容易才&lt;a href="https://github.com/tj/git-extras"&gt;git extras&lt;/a&gt;&amp;nbsp;merge回去的&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;當初看到這封信的時候，很是感動啊xd&lt;br&gt;
&lt;img alt="accepted" src="http://lee-w.github.io/images/posts-image/2017-02-28/1-accepted.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;git&amp;nbsp;ignore-io&lt;/h2&gt;
&lt;p&gt;這個工具主要是從&lt;a href="https://www.gitignore.io"&gt;gitignoore.io&lt;/a&gt;上下載.gitignore的範本&lt;br&gt;&amp;nbsp;e.g. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git ignore-io -a vim osx python
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;像這就是vim常見的暫存檔們&lt;br&gt;&amp;nbsp;一般來說應該被忽略掉，不用被commit&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Created by https://www.gitignore.io/api/vim

### Vim ###
# swap
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-v][a-z]
[._]sw[a-p]
# session
Session.vim
# temporary
.netrwhist
*~
# auto-generated tag files
tags

# End of https://www.gitignore.io/api/vim
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;p&gt;當初可是連文件都要寫好，才會被作者接受&lt;br&gt;&amp;nbsp;所以我這裡就直接沿用我當初寫的文件了xd&lt;/p&gt;
&lt;p&gt;Without option, &lt;code&gt;git ignore-io &amp;lt;type&amp;gt;&lt;/code&gt; shows the sample gitignore of specified types on&amp;nbsp;screen.  &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git ignore-io vim

    &lt;span class="c1"&gt;# Created by https://www.gitignore.io/api/vim&lt;/span&gt;

    &lt;span class="c1"&gt;### Vim ###&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;._&lt;span class="o"&gt;]&lt;/span&gt;*.s&lt;span class="o"&gt;[&lt;/span&gt;a-w&lt;span class="o"&gt;][&lt;/span&gt;a-z&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;._&lt;span class="o"&gt;]&lt;/span&gt;s&lt;span class="o"&gt;[&lt;/span&gt;a-w&lt;span class="o"&gt;][&lt;/span&gt;a-z&lt;span class="o"&gt;]&lt;/span&gt;
    *.un~
    Session.vim
    .netrwhist
    *~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To export it to &lt;code&gt;.gitignore&lt;/code&gt; file you can use the following&amp;nbsp;options:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--append&lt;/code&gt; to append the result to &lt;code&gt;.gitignore&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;--replace&lt;/code&gt; to export &lt;code&gt;.gitignore&lt;/code&gt; with the&amp;nbsp;result&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git ignore-io vim python
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For efficiency, &lt;code&gt;git ignore-io&lt;/code&gt; store all available types at &lt;code&gt;~/.gi_list&lt;/code&gt;.&lt;br&gt;
To list all the available&amp;nbsp;types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;-L&lt;/code&gt; : These two options will show the list in different format. Just try&amp;nbsp;it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also search type from the list&amp;nbsp;by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s &amp;lt;word&amp;gt;&lt;/code&gt; or &lt;code&gt;--search &amp;lt;word&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git ignore-io -s ja

    django
    jabref
    java
    ninja
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;為什麼要貢獻開源專案？&lt;/h2&gt;
&lt;p&gt;貢獻開源專案最主要的原因&lt;br&gt;
還是就是&lt;strong&gt;我需要這個功能啊！！！&lt;/strong&gt;&lt;br&gt;
但是就沒有人寫，bug沒有人修&lt;br&gt;&amp;nbsp;所以就只好先承認自己就是「沒有人」了xd&lt;/p&gt;
&lt;p&gt;其實gitignore.io本身就有提供一個簡單的script &lt;a href="https://www.gitignore.io/docs#-install-command-line"&gt;gi&lt;/a&gt;&lt;br&gt;
不過實在有點不夠我用xd&lt;br&gt;
於是我就寫了&lt;a href="https://github.com/Lee-W/gi_extension"&gt;gi_extension&lt;/a&gt;&lt;br&gt;
後來又覺得，如果整併的git extras&lt;br&gt;&amp;nbsp;我就能透過homebrew安裝了(?????&lt;/p&gt;
&lt;p&gt;整個從pull request到merge的過程其實蠻有趣的&lt;br&gt;
我找到當初我開的&lt;a href="https://github.com/tj/git-extras/pull/439"&gt;pr #439&lt;/a&gt;和&lt;a href="https://github.com/tj/git-extras/pull/448"&gt;pr #448&lt;/a&gt;&lt;br&gt;
從shell script的風格（有人建議我用&lt;a href="https://github.com/koalaman/shellcheck"&gt;shellcheck&lt;/a&gt;）到command的option為什麼要這樣命名&lt;br&gt;
都有人跟我討論，給我建議&lt;br&gt;
從中也學到了很多&lt;br&gt;&amp;nbsp;~~貢獻這些專案還能去申請SITCON跟COSCUP的開源貢獻票，這樣就不用跟大家搶票了~~&lt;/p&gt;</content></entry><entry><title>[Article] 男子漢理論</title><link href="http://lee-w.github.io/posts/article/2016/03/article-man-theory" rel="alternate"></link><published>2016-03-15T02:13:00+08:00</published><updated>2016-03-15T02:13:00+08:00</updated><author><name>Lee-W</name></author><id>tag:lee-w.github.io,2016-03-15:/posts/article/2016/03/article-man-theory</id><summary type="html">&lt;p&gt;這篇文實在太有趣了，還是該留下來做個紀錄XD&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這篇文實在太有趣了，還是該留下來做個紀錄XD&lt;/p&gt;
&lt;!--more--&gt;

&lt;h1&gt;男子漢理論&lt;/h1&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;真正的男子漢 programmer 是不會用那些亂七八糟，花枝招展的，所謂整合開發環境。
真正的男子漢 programmer 就是直接用 emacs, 或是 vi 這些男子漢編輯器直接寫程式。
如果你不知道這是甚麼東東，簡單來說，就是男子漢用的”記事本”。
當然在花枝招展，看來很娘的 Wxxxxws下要找到這些男子漢編輯器有一定難度，
但這絕對難不倒一個真正的男子漢 programmer。

另外真正的男子漢也不會用那些亂七八糟，花枝招展的所謂應用程式寫網頁。
真正的男子漢就是直接用 emacs, 或是 vi 這些男子漢編輯器直接寫 HTML，
因為那些亂七八糟，花枝招展的所謂應用程式寫出來的網頁
加了一大堆亂七八糟的 tag 根本沒有人看得懂。

真正的男子漢也不會用那些亂七八糟，花枝招展的所謂應用程式寫論文。
真正的男子漢就是直接用 emacs, 或是 vi 這些男子漢編輯器直接寫 latex。
因為那些亂七八糟，花枝招展的所謂應用程式寫出來的論文，字型醜的要命，
圖還會亂跑，換一台電腦就換一個樣子，一點也不像男子漢做出來的東西。

最後你可以看出真正的男子漢 programmer 不管做什麼事，
都只用男子漢編輯器就能搞定，這就是成為男子漢 programmer 的重點。
當然最好還是用 ed 這種神物，只是現存看過 ed 的 programmer
可能比看過”真理”的煉金術士還少，在此就不苛求了。

--Re: 男子漢理論,pangfeng (P老師)@pangfeng, ptt2.cc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From &lt;a href="http://cpmarkchang.logdown.com/pages/about-me"&gt;&lt;span class="caps"&gt;MARK&lt;/span&gt; &lt;span class="caps"&gt;CHANG&lt;/span&gt;&amp;#8217;S &lt;span class="caps"&gt;BLOG&lt;/span&gt; - About&amp;nbsp;Me&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>[Article] No More Zero Day</title><link href="http://lee-w.github.io/posts/article/2015/10/no-more-zero-day" rel="alternate"></link><published>2015-10-27T06:53:00+08:00</published><updated>2015-10-27T06:53:00+08:00</updated><author><name>Lee-W</name></author><id>tag:lee-w.github.io,2015-10-27:/posts/article/2015/10/no-more-zero-day</id><summary type="html">&lt;p&gt;決定開始來寫些程式以外的內容&lt;br&gt;
整理之前看過的書或文章，跟大家分享心得或書摘&lt;br&gt;&amp;nbsp;反正都寫了，不分享一下也是蠻可惜的(?)&lt;/p&gt;
</summary><content type="html">&lt;p&gt;決定開始來寫些程式以外的內容&lt;br&gt;
整理之前看過的書或文章，跟大家分享心得或書摘&lt;br&gt;&amp;nbsp;反正都寫了，不分享一下也是蠻可惜的(?)&lt;/p&gt;
&lt;!--more--&gt;

&lt;hr&gt;
&lt;p&gt;https://www.ptt.cc/bbs/t-management/M.1399297547.A.&lt;span class="caps"&gt;A5E&lt;/span&gt;.html&lt;br&gt;
這是在PTT上看到一篇還不錯的文章&lt;br&gt;
原作者還做了這麼一張圖激勵大家&lt;br&gt;
&lt;img alt="No More Zero Day" src="http://i.imgur.com/Eqf9wO1.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;1.&amp;nbsp;從今天開始不再有「零成就日」&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;零成就日&lt;ul&gt;
&lt;li&gt;一整天什麼事情都沒做的日子&lt;/li&gt;
&lt;li&gt;一整天都沒有任何對於你的目標而努力的日子&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;今天一整天啥都沒做，而現在已經是23:58了？&lt;ul&gt;
&lt;li&gt;寫一個句子。做一下伏地挺身。讀完課本一章節的其中一頁。&lt;/li&gt;
&lt;li&gt;每天只要這樣做下去就有很大的差別&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;生產力來自於持續每天都維持在「非零狀態」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2.&amp;nbsp;對三個「我」心存感激&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;過去我、現在我、未來我&lt;/li&gt;
&lt;li&gt;對「過去我」所做過任何正面的事情心存感激&lt;ul&gt;
&lt;li&gt;昨天不是「零成就日」因為你寫了兩百（不過，這是你最大的能力了嗎？）字？謝謝過去的自己。存了一點錢而可以買你想要的好東西？謝謝過去的自己。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;把「未來我」當作你最好的朋友，現在做任何事都要像是為你最好的朋友付出一樣拼命&lt;ul&gt;
&lt;li&gt;你必須幫「未來我」一個忙，就像幫你最好的朋友一個忙一樣&lt;/li&gt;
&lt;li&gt;累得要死但還是無法放下網路和電玩嗎？去你的，「現在我」，我現在要替「未來我」做點事了。&lt;/li&gt;
&lt;li&gt;鬧鐘響了但是床太舒服？去你的，「現在我」，我現在要替我最好的朋友「未來我」做點事了，我要起來跑個5公里（或是25尺，無所謂，只要不是0就好）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;你現在能過的一點好生活都源自於過去的努力。這樣子「努力」和「感謝」的循環模式就是讓你維持生產力和感恩之心的源頭&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3.&amp;nbsp;原諒自己&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;責備自己只會讓你更沒有生產力。&lt;ul&gt;
&lt;li&gt;昨天試著想避免「零成就日」卻失敗了嗎？那又怎樣！&lt;/li&gt;
&lt;li&gt;過去的自己。我原諒你！&lt;/li&gt;
&lt;li&gt;但是今天呢？今天是要盡你最大的能力發揮「非零成就日」的威力&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4.&amp;nbsp;書和運動&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;每天持續運動真的會讓你更聰明。當你運動時身體會釋放讓你快樂的物質&lt;/li&gt;
&lt;li&gt;至於書？所有我們能想得到的想法，或是感受、經驗、體驗、欲望、或是想知道怎麼做某件事，不管是什麼東西，都已經被某個人想出來了&lt;/li&gt;
&lt;li&gt;讀網路上關於減重的文章並將他納入你的運動準則中&lt;/li&gt;
&lt;li&gt;閱讀就像是瑪莉歐電玩中的水管快速通道，他是你到達下一個層級的快速捷徑。&lt;/li&gt;
&lt;/ul&gt;</content><category term="Productivity"></category></entry></feed>